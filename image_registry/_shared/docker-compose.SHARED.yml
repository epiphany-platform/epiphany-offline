---
version: "2"

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET_PREFIX}.0/24
          gateway: ${SUBNET_PREFIX}.1

volumes:
  image_registry_cache:

services:
  traefik:
    image: traefik:v2.3
    networks:
      default:
        aliases: [traefik.epiphany.lh]
        ipv4_address: ${SUBNET_PREFIX}.2
    ports:
      - ${HTTP_PORT}:80/tcp
      - ${HTTPS_PORT}:443/tcp
    volumes:
      - ./../_shared/traefik-dynamic.yml:/traefik-dynamic.yml:ro
      - ${CERTIFICATES_DIR}/:/certificates/:ro
    command:
      - --log.level=INFO
      - --api=false
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --providers.file.filename=/traefik-dynamic.yml
      - --providers.file.watch=false
    restart: "unless-stopped"

  repository:
    build:
      context: .
      dockerfile: repository.Dockerfile
    networks:
      default:
        aliases: [repository.epiphany.lh]
        ipv4_address: ${SUBNET_PREFIX}.4
    volumes:
      - ${OFFLINE_DIR}/:/usr/local/apache2/htdocs/epirepo/:rw
    restart: "unless-stopped"

  image_registry:
    image: registry:2
    networks:
      default:
        aliases: [image-registry.epiphany.lh]
        ipv4_address: ${SUBNET_PREFIX}.8
    volumes:
      - image_registry_cache:/var/lib/registry/:rw
    restart: "unless-stopped"

  skopeo_upload:
    depends_on: [image_registry]
    image: epiphany-offline-skopeo_upload
    build:
      context: .
      dockerfile: skopeo_upload.Dockerfile
    networks:
      default:
        aliases: [skopeo-upload.epiphany.lh]
        ipv4_address: ${SUBNET_PREFIX}.16
    volumes:
      - ${OFFLINE_DIR}/:/offline_directory/:ro
    restart: "no"
    entrypoint: []
    command:
      - /bin/sh
      - -ec
      - >-
        : WAIT FOR REGISTRY TO BECOME AVAILABLE;
        for RETRY in 9 8 7 6 5 4 3 2 1 0; do
          if curl -fsSL "http://image-registry.epiphany.lh:5000/v2/"; then
            break;
          fi;
          sleep 4;
        done && [ "$${RETRY}" -gt 0 ];

        : UPLOAD ALL IMAGES TO REGISTRY;
        jq -r '.[] | [.file_name, .name] | @tsv' /offline_directory/images_to_load.json | while IFS=$$'\t' read FILE_NAME NAME; do
          if [ -f "/offline_directory/images/$${FILE_NAME}" ]; then
            : UPLOAD CURRENT IMAGE;
            skopeo copy --quiet --dest-tls-verify=false "docker-archive:/offline_directory/images/$${FILE_NAME}" "docker://image-registry.epiphany.lh:5000/$${NAME}";
          fi;
        done;
